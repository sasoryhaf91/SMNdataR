[{"path":"https://sasoryhaf91.github.io/SMNdataR/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers SMNdataR, pledge foster open, welcoming, inclusive environment everyone, regardless background identity. commit : - Use respectful inclusive language. - patient supportive interactions. - Respect different viewpoints experiences. - Refrain harassment, discrimination, personal attacks. Instances unacceptable behavior may reported Hugo Antonio-Fernández uiem.haf@gmail.com. project follows principles Contributor Covenant, version 2.1.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to SMNdataR","title":"Contributing to SMNdataR","text":"Thank considering contributing SMNdataR! welcome bug reports, feature suggestions, code improvements.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Contributing to SMNdataR","text":"Fork repository create new branch. Make changes include clear commit messages. Ensure checks pass running devtools::check(). Submit pull request describing contribution.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/CONTRIBUTING.html","id":"reporting-issues","dir":"","previous_headings":"","what":"Reporting Issues","title":"Contributing to SMNdataR","text":"encounter bug feature request, please open issue clear description reproducible example.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code Style","title":"Contributing to SMNdataR","text":"Follow tidyverse style guide. Use English code, comments, documentation. Include examples function documentation whenever possible. Thank helping improve open reproducible climatological tools Mexico!","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Hugo Antonio Fernández, Colegio de Postgraduados, Universidad Mexiquense del Bicentenario Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Getting started with SMNdataR","text":"","code":"library(SMNdataR)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"what-youll-learn","dir":"Articles","previous_headings":"","what":"What you’ll learn","title":"Getting started with SMNdataR","text":"shape daily tables returned smn_dl_daily_single(). minimal, offline example (internet needed build vignette). look real downloads (code provided eval = FALSE).","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"a-tiny-offline-example","dir":"Articles","previous_headings":"","what":"A tiny offline example","title":"Getting started with SMNdataR","text":"mimic “full” daily table synthetic data:","code":"toy <- data.frame( station   = \"15101\", latitude  = 19.50, longitude = -99.25, altitude  = 2250, date      = as.Date(\"2020-01-01\") + 0:6, prec      = c(0, 2.1, 0, 5.3, NA, 0.5, 1.2), evap      = c(NA, 3.0, 3.2, 3.1, 2.9, 3.0, 2.8), tmax      = c(22, 23, 21, 20, 22, 21, 24), tmin      = c( 8,  9,  7,  6,  8,  7,  9), stringsAsFactors = FALSE ) str(toy) #> 'data.frame':    7 obs. of  9 variables: #>  $ station  : chr  \"15101\" \"15101\" \"15101\" \"15101\" ... #>  $ latitude : num  19.5 19.5 19.5 19.5 19.5 19.5 19.5 #>  $ longitude: num  -99.2 -99.2 -99.2 -99.2 -99.2 ... #>  $ altitude : num  2250 2250 2250 2250 2250 2250 2250 #>  $ date     : Date, format: \"2020-01-01\" \"2020-01-02\" ... #>  $ prec     : num  0 2.1 0 5.3 NA 0.5 1.2 #>  $ evap     : num  NA 3 3.2 3.1 2.9 3 2.8 #>  $ tmax     : num  22 23 21 20 22 21 24 #>  $ tmin     : num  8 9 7 6 8 7 9 head(toy) #>   station latitude longitude altitude       date prec evap tmax tmin #> 1   15101     19.5    -99.25     2250 2020-01-01  0.0   NA   22    8 #> 2   15101     19.5    -99.25     2250 2020-01-02  2.1  3.0   23    9 #> 3   15101     19.5    -99.25     2250 2020-01-03  0.0  3.2   21    7 #> 4   15101     19.5    -99.25     2250 2020-01-04  5.3  3.1   20    6 #> 5   15101     19.5    -99.25     2250 2020-01-05   NA  2.9   22    8 #> 6   15101     19.5    -99.25     2250 2020-01-06  0.5  3.0   21    7"},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"a-simple-monthly-aggregation-demo-only","dir":"Articles","previous_headings":"","what":"A simple monthly aggregation (demo only):","title":"Getting started with SMNdataR","text":"","code":"toy$ym <- format(toy$date, \"%Y-%m\") aggregate(prec ~ ym, data = toy, sum, na.rm = TRUE) #>        ym prec #> 1 2020-01  9.1"},{"path":[]},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"smn-daily","dir":"Articles","previous_headings":"Real downloads (examples, not executed here)","what":"SMN daily","title":"Getting started with SMNdataR","text":"","code":"# df_smn <- smn_dl_daily_single( # station = \"15101\", # start_date = \"2020-01-01\", end_date = \"2020-01-10\", # output_format = \"full\" # ) # head(df_smn)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"nasa-power-daily","dir":"Articles","previous_headings":"Real downloads (examples, not executed here)","what":"NASA POWER daily","title":"Getting started with SMNdataR","text":"","code":"# df_np <- smn_dl_daily_nasa( # station = \"Toluca_Node\", # lat = 19.289, lon = -99.657, # start_date = \"2020-01-01\", end_date = \"2020-01-10\", # vars = c(\"T2M_MAX\",\"T2M_MIN\",\"PRECTOTCORR\"), # output_format = \"reduce\" # ) # head(df_np)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"hybrid-smn-nasa-over-the-same-coordinates","dir":"Articles","previous_headings":"Real downloads (examples, not executed here)","what":"Hybrid (SMN + NASA over the same coordinates)","title":"Getting started with SMNdataR","text":"","code":"# stations <- data.frame( # station = c(\"15101\",\"15021\"), # latitude = c(NA, 19.5), # longitude = c(NA, -99.3), # altitude = NA # ) # df_hyb <- smn_dl_daily_batch( # stations, # source = \"hybrid\", # start_date = \"2020-01-01\", end_date = \"2020-01-05\", # vars = c(\"T2M_MIN\",\"T2M_MAX\",\"PRECTOTCORR\") # ) # head(df_hyb)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/articles/getting-started.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with SMNdataR","text":"","code":"sessionInfo() #> R version 4.5.2 (2025-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] SMNdataR_0.1.0 #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     #>  [5] xfun_0.54         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 #>  [9] rmarkdown_2.30    lifecycle_1.0.4   cli_3.6.5         pkgdown_2.1.3     #> [13] sass_0.4.10       textshaping_1.0.4 jquerylib_0.1.4   systemfonts_1.3.1 #> [17] compiler_4.5.2    tools_4.5.2       ragg_1.5.0        evaluate_1.0.5    #> [21] bslib_0.9.0       yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       #> [25] fs_1.6.6"},{"path":"https://sasoryhaf91.github.io/SMNdataR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Antonio-Fernández. Author, maintainer.            Hugo Antonio-Fernández,antonio.hugo@colpos.mx; hugo.antonio@umb.mx Humberto Vaquera-Huerta. Contributor. Moisés Michel Rosengaus-Moshinsky. Contributor. Paulino Pérez-Rodríguez. Contributor. José Crossa. Contributor. Colegio de Postgraduados. Copyright holder.           https://www.colpos.mx Universidad Mexiquense del Bicentenario. Copyright holder.           https://www.umb.mx","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Antonio-Fernández, H., Vaquera-Huerta, H., Rosengaus-Moshinsky, M. M., Pérez-Rodríguez, P., & Crossa, J. (2025). SMNdataR: Tools Processing Analyzing Mexican Meteorological Data Climatological Applications. Zenodo. https://doi.org/10.5281/zenodo.17451876","code":"@Manual{,   title = {SMNdataR: Tools for Processing and Analyzing Mexican Meteorological Data for Climatological Applications},   author = {Hugo Antonio-Fernández and Humberto Vaquera-Huerta and Moisés Michel Rosengaus-Moshinsky and Paulino Pérez-Rodríguez and José Crossa},   year = {2025},   organization = {Colegio de Postgraduados & Universidad Mexiquense del Bicentenario},   url = {https://doi.org/10.5281/zenodo.17451876},   note = {Version 0.1.0}, }"},{"path":[]},{"path":[]},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-overview","dir":"","previous_headings":"","what":"📘 Overview","title":"Tools for Processing Mexican SMN Climatological Data","text":"SMNdataR open-source R package designed automate retrieval, cleaning, analysis climatological data Mexico’s Servicio Meteorológico Nacional (SMN). provides fully reproducible workflows handling large volumes daily meteorological data, integrating station metadata, completeness checks, optional hybrid fusion open global datasets NASA POWER. package fills major gap accessibility meteorological information Mexico, open data limited existing systems (e.g., CLICOM, ERIC IV) allow automated, large-scale downloads integration reproducible analytical pipelines.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-key-features","dir":"","previous_headings":"","what":"🌎 Key Features","title":"Tools for Processing Mexican SMN Climatological Data","text":"📥 Automatic data retrieval: Download daily SMN data multiple stations . 🧩 Data harmonization: Standardizes variable names, metadata, coordinates. 🌤️ Hybrid integration: Combines SMN data global datasets (NASA POWER). 🧮 Analytical utilities: Completeness, summary, spatial correlation tools. 📊 Export-ready outputs: Clean, tidy datasets compatible modern R workflows (tidyverse, sf, etc.). 🔁 Reproducibility: Fully scripted transparent, following FAIR open-science principles.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_️-installation","dir":"","previous_headings":"","what":"⚙️ Installation","title":"Tools for Processing Mexican SMN Climatological Data","text":"can install development version directly GitHub:","code":"# Install dependencies (if necessary) install.packages(c(\"devtools\", \"dplyr\", \"lubridate\", \"httr\", \"jsonlite\", \"sf\"))  # Install SMNdataR from GitHub devtools::install_github(\"sasoryhaf91/SMNdataR\")  # Load the package library(SMNdataR)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-example-usage","dir":"","previous_headings":"","what":"💡 Example Usage","title":"Tools for Processing Mexican SMN Climatological Data","text":"retrieves merges daily precipitation temperature records SMN satellite-derived variables NASA POWER coordinates.","code":"# Example: Retrieve SMN + NASA POWER (hybrid) library(SMNdataR)  data <- smn_dl_daily_batch(   stations   = c(\"15101\", \"15021\"),   source     = \"hybrid\",   start_date = \"1991-01-01\",   end_date   = \"2020-12-31\",   vars       = c(\"T2M_MIN\", \"T2M_MAX\", \"PRECTOTCORR\") )  head(data)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-citation","dir":"","previous_headings":"","what":"📄 Citation","title":"Tools for Processing Mexican SMN Climatological Data","text":"use SMNdataR research, please cite follows: Antonio-Fernández, H., Vaquera-Huerta, H., Rosengaus-Moshinsky, M. M., Pérez-Rodríguez, P., & Crossa, J. (2025).SMNdataR: Tools Processing Analyzing Mexican Meteorological Data Climatological Applications. Journal Open Source Software (submitted). DOI: 10.5281/zenodo.17451876 BibTeX entry:","code":"@misc{Fernandez2025SMNdataR,   author  = {Hugo Antonio-Fernández and Humberto Vaquera-Huerta and Moisés Michel Rosengaus-Moshinsky and Paulino Pérez-Rodríguez and José Crossa},   title   = {SMNdataR: Tools for Processing and Analyzing Mexican Meteorological Data for Climatological Applications},   year    = {2025},   doi     = {10.5281/zenodo.17451876},   url     = {https://github.com/sasoryhaf91/SMNdataR},   publisher = {Zenodo}, }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_️-funding-and-acknowledgements","dir":"","previous_headings":"","what":"🏛️ Funding and Acknowledgements","title":"Tools for Processing Mexican SMN Climatological Data","text":"work supported Secretaría de Ciencia, Humanidades, Tecnología e Innvoción (SECIHTI) doctoral scholarship granted first author National Postgraduate System Mexico. acknowledge Comisión Nacional del Agua (CONAGUA) maintaining providing access national meteorological database forms foundation package. also thank Colegio de Postgraduados Universidad Mexiquense del Bicentenario institutional support development research, well International Maize Wheat Improvement Center (CIMMYT) fostering open collaboration climate agricultural research. combined contributions essential conception, validation, dissemination SMNdataR package.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-license","dir":"","previous_headings":"","what":"🧾 License","title":"Tools for Processing Mexican SMN Climatological Data","text":"package released MIT License. See LICENSE.md details.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-project-links","dir":"","previous_headings":"","what":"🔗 Project Links","title":"Tools for Processing Mexican SMN Climatological Data","text":"🧬 GitHub Repository: https://github.com/sasoryhaf91/SMNdataR 🧾 Zenodo DOI: https://doi.org/10.5281/zenodo.17451876 📄 JOSS Submission: (pending review) 🧠 Author ORCID: 0000-0002-5355-8476","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"Tools for Processing Mexican SMN Climatological Data","text":"Contributions, suggestions, bug reports welcome! Please open issue submit pull request. wish contribute new features, please describe proposal clearly issue tracker submitting pull request.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-contact","dir":"","previous_headings":"","what":"🧠 Contact","title":"Tools for Processing Mexican SMN Climatological Data","text":"Hugo Antonio-Fernández Doctoral Researcher — Colegio de Postgraduados / Researcher - Universidad Mexiquense del Bicentenario 📧 Email: uiem.haf@gmail.com 🌐 ORCID: 0000-0002-5355-8476","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/index.html","id":"id_-citation-reminder","dir":"","previous_headings":"","what":"🧭 Citation Reminder","title":"Tools for Processing Mexican SMN Climatological Data","text":"Please include DOI package name derivative work. citation helps recognize effort invested developing open reproducible climatological tools Mexico. Antonio-Fernández, H., Vaquera-Huerta, H., Rosengaus-Moshinsky, M. M., Pérez-Rodríguez, P., & Crossa, J. (2025).SMNdataR: Tools Processing Analyzing Mexican Meteorological Data Climatological Applications. Journal Open Source Software, Review. DOI: 10.5281/zenodo.17451876","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/gridmex.html","id":null,"dir":"Reference","previous_headings":"","what":"National 1-km grid for Mexico with altitude — gridmex","title":"National 1-km grid for Mexico with altitude — gridmex","text":"1-km lattice nodes covering Mexico altitude.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/gridmex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National 1-km grid for Mexico with altitude — gridmex","text":"","code":"gridmex"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/gridmex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"National 1-km grid for Mexico with altitude — gridmex","text":"data frame columns: station character: synthetic node id latitude numeric, WGS84 longitude numeric, WGS84 altitude numeric, meters","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/gridmex.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"National 1-km grid for Mexico with altitude — gridmex","text":"(DEM source / processing steps)","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/gridmex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"National 1-km grid for Mexico with altitude — gridmex","text":"Created (put DEM source).","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"Downloads daily meteorological series multiple stations : SMN (official -situ records), NASA POWER (satellite/reanalysis), Hybrid: joins SMN (full) + NASA POWER variables station + date. harmonizes output columns (station metadata, date, core SMN variables, optional NASA POWER variables) returns either single tidy data frame (row-bound) list per station.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"","code":"smn_dl_daily_batch(   stations,   source = c(\"smn\", \"nasa\", \"hybrid\"),   start_date = \"1961-01-01\",   end_date = Sys.Date(),   output_format = c(\"full\", \"reduced\"),   del_na = c(\"no\", \"yes\"),   require_coords = TRUE,   vars = c(\"T2M_MIN\", \"T2M_MAX\", \"PRECTOTCORR\"),   community = c(\"AG\", \"RE\", \"SB\"),   return_list = FALSE,   .handlers = NULL,   .progress = TRUE )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"stations Character/numeric vector station codes data frame least station column. source = \"nasa\" \"hybrid\", latitude, longitude, altitude present, used directly; otherwise function try resolve (see require_coords). source One \"smn\", \"nasa\", \"hybrid\", custom key present .handlers. start_date Start date (inclusive). Date character. Default \"1961-01-01\". end_date End date (inclusive). Date character. Default Sys.Date(). output_format Output format: \"full\" (default) \"reduced\". full: station, latitude, longitude, altitude, date, prec, evap, tmax, tmin reduced: date, prec, evap, tmax, tmin del_na \"\" (default) \"yes\". \"yes\", rows containing NA dropped end. require_coords Logical. \"nasa\"/\"hybrid\": attempt resolve missing coordinates using smn_int_extract_coordinates() latitude/longitude provided stations. vars Character vector NASA POWER parameter codes used source = \"nasa\" \"hybrid\" (e.g., c(\"T2M_MIN\",\"T2M_MAX\",\"PRECTOTCORR\")). community NASA POWER community \"nasa\"/\"hybrid\"; one \"AG\", \"RE\", \"SB\" (default \"AG\"). return_list Logical; TRUE, returns named list (one element per station). FALSE (default), returns single tidy data frame rows bound. .handlers Optional named list custom handlers signature function(station, start_date, end_date, output_format, del_na, row, vars, community). .progress Logical. Show simple text progress bar downloading.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"data frame (default) stations row-bound chronological order per station, named list per-station data frames return_list = TRUE.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"Output columns depend source: source = \"smn\": station, latitude, longitude, altitude, date, prec, evap, tmax, tmin (reduced set output_format = \"reduced\"). source = \"nasa\": station, latitude, longitude, altitude, date + requested vars. source = \"hybrid\": union SMN core variables + requested NASA vars. branch fails given station, function continues returns available (empty data frame station), warning needed. return_list = FALSE, results row-bound end, keeping consistent column order per source.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":"custom-handlers","dir":"Reference","previous_headings":"","what":"Custom handlers","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"can extend sources via .handlers, e.g.:","code":"my_h <- list(     era5 = function(station, start_date, end_date, output_format, del_na, row, vars, community) {       # ... your downloader; must return a data.frame with at least       # station, date, latitude, longitude, altitude, and variables     }   )   smn_dl_daily_batch(stations = c(\"15021\",\"15101\"),                      source = \"era5\",                      start_date = \"2000-01-01\", end_date = \"2000-01-10\",                      .handlers = my_h)"},{"path":[]},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Download of Daily Climate Data (SMN, NASA POWER, or Hybrid) — smn_dl_daily_batch","text":"","code":"if (FALSE) { # \\dontrun{ # --- Minimal examples (short date window) ---  # 1) SMN only (two stations, short period) df_smn <- smn_dl_daily_batch(   stations = c(\"15021\",\"15101\"),   source   = \"smn\",   start_date = \"2020-01-01\",   end_date   = \"2020-01-05\",   output_format = \"full\",   del_na = \"no\",   .progress = TRUE ) head(df_smn)  # 2) NASA POWER only — if you already know coordinates for each station st <- data.frame(   station   = c(\"X15021\",\"X15101\"),   latitude  = c(19.35, 19.70),   longitude = c(-99.10, -99.20),   altitude  = c(2250, 2400) ) df_nasa <- smn_dl_daily_batch(   stations = st,   source   = \"nasa\",   start_date = \"2020-01-01\",   end_date   = \"2020-01-03\",   vars = c(\"T2M_MIN\",\"T2M_MAX\",\"PRECTOTCORR\"),   community = \"AG\",   .progress = FALSE ) head(df_nasa)  # 3) HYBRID (SMN + NASA POWER merged by station/date) df_hyb <- smn_dl_daily_batch(   stations = c(\"15021\",\"15101\"),   source   = \"hybrid\",   start_date = \"2020-01-01\",   end_date   = \"2020-01-05\",   vars = c(\"T2M_MIN\",\"T2M_MAX\",\"PRECTOTCORR\"),   .progress = TRUE ) head(df_hyb) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_nasa.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Daily NASA POWER (MERRA-2) Data for a Named Point — smn_dl_daily_nasa","title":"Download Daily NASA POWER (MERRA-2) Data for a Named Point — smn_dl_daily_nasa","text":"Downloads daily NASA POWER variables specific point (lat/lon) tags result user-defined station (node) name can join/trace later.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_nasa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Daily NASA POWER (MERRA-2) Data for a Named Point — smn_dl_daily_nasa","text":"","code":"smn_dl_daily_nasa(   station,   lat,   lon,   altitude = NA_real_,   start_date = \"1984-01-01\",   end_date = Sys.Date(),   vars = c(\"T2M_MAX\", \"T2M_MIN\", \"RH2M\", \"PRECTOTCORR\", \"EVLAND\"),   community = \"AG\",   retries = 5,   sleep_sec = 3,   output_format = c(\"all\", \"reduce\") )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_nasa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Daily NASA POWER (MERRA-2) Data for a Named Point — smn_dl_daily_nasa","text":"station Character. label node name tag time series (e.g., \"Toluca_Node\"). lat Numeric. Latitude decimal degrees (WGS84). lon Numeric. Longitude decimal degrees (WGS84). altitude Numeric (optional). Altitude point (m .s.l.). Default NA_real_. start_date Start date (YYYY-MM-DD). earlier 1984-01-01, automatically adjusted 1984-01-01 (POWER coverage). end_date End date (YYYY-MM-DD). Default Sys.Date(). vars Character vector POWER parameter short names. Defaults compact set: c(\"T2M_MAX\",\"T2M_MIN\",\"RH2M\",\"PRECTOTCORR\",\"EVLAND\"). community POWER community. Default \"AG\". (Common alternatives: \"SSE\", \"RE\") retries Integer. Max GET retries failure (default 5). sleep_sec Numeric. Seconds sleep retries (default 3). output_format Either \"\" (default) \"reduce\". \"reduce\" option keeps station, latitude, longitude, altitude, date requested variables.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_nasa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Daily NASA POWER (MERRA-2) Data for a Named Point — smn_dl_daily_nasa","text":"data.frame ordered date columns: station, latitude, longitude, altitude, date, <requested POWER variables>. POWER missing values -999 returned NA.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_nasa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Daily NASA POWER (MERRA-2) Data for a Named Point — smn_dl_daily_nasa","text":"","code":"if (FALSE) { # \\dontrun{ nasa_df <- smn_dl_daily_nasa(   station = \"Toluca_Node\",   lat = 19.289, lon = -99.657, altitude = 2670,   start_date = \"2020-01-01\", end_date = \"2020-12-31\",   vars = c(\"T2M_MAX\",\"T2M_MIN\",\"PRECTOTCORR\"),   output_format = \"reduce\" ) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Raw Daily Data for a Station (robust header detection) — smn_dl_daily_raw","title":"Download Raw Daily Data for a Station (robust header detection) — smn_dl_daily_raw","text":"Downloads parses raw daily data file SMN using internal URL. function resilient changes header length detecting first data row via date pattern (YYYY-MM-DD) rather assuming fixed number header lines.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Raw Daily Data for a Station (robust header detection) — smn_dl_daily_raw","text":"","code":"smn_dl_daily_raw(   station,   add_meta_cols = FALSE,   max_attempts = 10,   encoding = \"UTF-8\" )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Raw Daily Data for a Station (robust header detection) — smn_dl_daily_raw","text":"station Station code (character numeric). add_meta_cols Logical. TRUE, includes station source_url explicit columns returned data (default FALSE keep original column schema). Metadata always attached attributes. max_attempts Integer. Maximum retry attempts via smn_int_handle_error (default 10). encoding Character. Encoding passed readLines() (default \"UTF-8\").","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Raw Daily Data for a Station (robust header detection) — smn_dl_daily_raw","text":"base data.frame columns: date, prec, evap, tmax, tmin. Attributes station source_url attached provenance.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Raw Daily Data for a Station (robust header detection) — smn_dl_daily_raw","text":"","code":"if (FALSE) { # \\dontrun{ df <- smn_dl_daily_raw(\"15021\") attr(df, \"source_url\") } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","title":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","text":"Downloads raw daily data given SMN station, filters date window, attaches station coordinates, returns cleaned table either full reduced format. basic building block used higher-level functions (e.g., smn_dl_daily_batch hybrid workflow).","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","text":"","code":"smn_dl_daily_single(   station,   start_date = \"1961-01-01\",   end_date = Sys.Date(),   output_format = c(\"full\", \"reduced\"),   del_na = c(\"no\", \"yes\") )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","text":"station Character numeric SMN station code (e.g., \"15101\"). start_date Start date (inclusive). Date character. Default \"1961-01-01\". end_date End date (inclusive). Date character. Default Sys.Date(). output_format Output format: \"full\" (default) \"reduced\". full: station, latitude, longitude, altitude, date, prec, evap, tmax, tmin reduced: date, prec, evap, tmax, tmin del_na \"\" (default) \"yes\". \"yes\", rows containing NA dropped end.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","text":"data.frame columns defined output_format, ordered date. rows fall within requested window download fails, returns empty data frame appropriate columns chosen format.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","text":"function: Downloads raw daily data via smn_dl_daily_raw (best effort). Filters start_date <= date <= end_date. Ensures variables prec, evap, tmax, tmin exist (filling missing ones NA). Attaches coordinates using smn_int_extract_coordinates (falls back NA failure). goal deliver stable, tidy-ready table downstream analyses integration auxiliary sources (e.g., NASA POWER) hybrid workflows.","code":""},{"path":[]},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_daily_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Structure Daily Station Data (SMN) — smn_dl_daily_single","text":"","code":"if (FALSE) { # \\dontrun{ # Minimal example (short window) with 'full' output df_full <- smn_dl_daily_single(   station = \"15101\",   start_date = \"2020-01-01\",   end_date   = \"2020-01-07\",   output_format = \"full\",   del_na = \"no\" ) head(df_full)  # Same interval but 'reduced' output df_red <- smn_dl_daily_single(   station = \"15101\",   start_date = \"2020-01-01\",   end_date   = \"2020-01-07\",   output_format = \"reduced\" ) head(df_red) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"Downloads daily SMN data station using smn_dl_daily_single(), aggregates monthly values one variables applying completeness rule per month. function can return either long table (one row per month column per requested variable), reduce tables (one per variable, YEAR, JAN..DEC, annual summaries).","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"","code":"smn_dl_monthly_single(   station,   variables = \"all\",   start_date = \"1961-01-01\",   end_date = Sys.Date(),   max_missing_frac = 0.2,   output_format = c(\"reduce\", \"long\"),   aggregator = NULL,   csv_file = NULL,   daily_del_na = \"no\" )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"station Character numeric. SMN station code (passed smn_dl_daily_single()). variables Character vector variables aggregate, \"\". Valid names \"prec\", \"evap\", \"tmax\", \"tmin\". Default \"\". start_date Start date (inclusive). Coerced .Date(). Default \"1961-01-01\". Passed smn_dl_daily_single(). end_date End date (inclusive). Coerced .Date(). Default Sys.Date(). Passed smn_dl_daily_single(). max_missing_frac Numeric [0, 1]. fraction missing days month exceeds threshold, monthly value set NA. Default 0.2. output_format Output format. Either \"long\" \"reduce\" (default \"reduce\"). aggregator Optional single function apply variables (e.g., median) named list mapping variable → function, e.g., list(prec = sum, tmax = mean). NULL, defaults used: sum prec,evap mean tmax,tmin. csv_file Optional path write CSV output. \"long\": single CSV csv_file. \"reduce\" multiple variables: one file per variable, using paste0(file_path_sans_ext(csv_file), \"_\", var, \".csv\"). daily_del_na Character \"yes\" \"\"; forwarded smn_dl_daily_single() control row removal daily stage. Default \"\". Note: monthly completeness rule applied downloading daily data; argument cleaning rows daily function.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"output_format = \"long\": single data.frame columns station, latitude, longitude, altitude, date, <vars...>. output_format = \"reduce\" single variable requested: wide data.frame. output_format = \"reduce\" multiple variables requested: named list wide data.frames (one per variable).","code":""},{"path":[]},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":"long-format","dir":"Reference","previous_headings":"","what":"Long format","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"output_format = \"long\", result contains one row per month columns: station, latitude, longitude, altitude, date, <vars...>, <vars...> requested subset among prec, evap, tmin, tmax. date column first day month.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":"reduce-format","dir":"Reference","previous_headings":"","what":"Reduce format","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"output_format = \"reduce\", result wide table (named list tables multiple variables requested) columns: YEAR, JAN..DEC, ACUM, PROM, MONTHS. sum-type variables (prec, evap) ACUM row sum; mean-type variables (tmax, tmin) ACUM row mean. PROM always row mean across valid months; MONTHS count non-NA months. Daily data obtained via smn_dl_daily_single() output_format = \"full\" (carry station metadata). Missing fraction computed calendar number days per month within requested window; absent daily rows count missing. date long table set first day month (YYYY-MM-01).","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_monthly_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Aggregate Monthly Climate Data (Single Station) — smn_dl_monthly_single","text":"","code":"if (FALSE) { # \\dontrun{ # 1) All variables, monthly, long format (one row per month) m_long <- smn_dl_monthly_single(   station = \"15101\",   variables = \"all\",   start_date = \"1984-01-01\",   end_date   = \"2020-12-31\",   output_format = \"long\" )  # 2) Only precipitation, reduce format (wide) m_prec <- smn_dl_monthly_single(\"15101\", variables = \"prec\", output_format = \"reduce\")  # 3) Two variables, strict completeness (<= 10% missing), custom aggregator m_custom <- smn_dl_monthly_single(   station = \"15101\",   variables = c(\"tmax\",\"tmin\"),   max_missing_frac = 0.10,   aggregator = median,   output_format = \"long\" )  # 4) Control daily cleaning from here (do not drop NAs before monthly) m_cfg <- smn_dl_monthly_single(   station = \"15101\",   variables = \"all\",   daily_del_na = \"no\",   output_format = \"long\" ) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_yearly_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","title":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","text":"Downloads daily data SMN station using smn_dl_daily_single() aggregates yearly values one variables, quality control based allowed fraction missing days per year. output always reduce (wide) format: one row per year requested variables columns plus station metadata.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_yearly_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","text":"","code":"smn_dl_yearly_single(   station,   start_date = \"1961-01-01\",   end_date = Sys.Date(),   variables = \"all\",   max_missing_frac = 0.2,   aggregator = NULL,   csv_file = NULL )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_yearly_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","text":"station Character numeric. SMN station code (e.g., \"15101\"). start_date Character Date. Start daily window (default \"1961-01-01\", inclusive). end_date Character Date. End daily window (default Sys.Date(), inclusive). variables Character vector variables summarize. subset c(\"prec\",\"evap\",\"tmax\",\"tmin\"). Use \"\" include four (default \"\"). max_missing_frac Numeric [0, 1]. Maximum allowed fraction missing days per year keep year's aggregate variable (default 0.2). missing fraction exceeds threshold, yearly value set NA. aggregator Either: NULL (default): uses sum \"prec\",\"evap\" mean \"tmax\",\"tmin\", single function (e.g., median) applied variables, named list mapping variables functions, e.g. list(prec = sum, evap = sum, tmax = mean, tmin = mean). csv_file Optional file path. non-NULL, result written CSV (row.names = FALSE) also returned.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_yearly_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","text":"base data.frame reduce (wide) format columns: station, latitude, longitude, altitude, YEAR, <variables...>. data available, returns empty table schema.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_yearly_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","text":"Internally calls smn_dl_daily_single() output_format = \"full\" fetch daily data station metadata. missing-data rule computed per year per variable #(NA) / #(days year).","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_dl_yearly_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Aggregate Yearly Climate Data (Reduce Format) — smn_dl_yearly_single","text":"","code":"if (FALSE) { # \\dontrun{ # All variables in reduce format (default) y1 <- smn_dl_yearly_single(   station = \"15101\",   start_date = \"2000-01-01\",   end_date   = \"2005-12-31\",   variables  = \"all\" )  # Subset of variables and custom aggregator y2 <- smn_dl_yearly_single(   station = \"15101\",   start_date = \"1990-01-01\",   end_date   = \"1999-12-31\",   variables  = c(\"prec\",\"tmax\"),   aggregator = list(prec = sum, tmax = median) ) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_extract_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Coordinates for Multiple Stations — smn_info_extract_coordinates","title":"Extract Coordinates for Multiple Stations — smn_info_extract_coordinates","text":"Iterates vector station codes retrieves coordinates using smn_int_extract_coordinates(). extraction fails station, row filled NA values warning emitted.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_extract_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Coordinates for Multiple Stations — smn_info_extract_coordinates","text":"","code":"smn_info_extract_coordinates(stations, show_progress = interactive(), ...)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_extract_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Coordinates for Multiple Stations — smn_info_extract_coordinates","text":"stations Character numeric vector station codes. show_progress Logical. Show text progress bar interactive (default interactive()). ... Optional arguments passed smn_int_extract_coordinates(), e.g. max_attempts, encoding, add_meta_cols = TRUE.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_extract_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Coordinates for Multiple Stations — smn_info_extract_coordinates","text":"base data.frame columns: station, latitude, longitude, altitude. pass add_meta_cols = TRUE ..., extra columns smn_int_extract_coordinates() (e.g. source_url) included .","code":""},{"path":[]},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_extract_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Coordinates for Multiple Stations — smn_info_extract_coordinates","text":"","code":"if (FALSE) { # \\dontrun{ stations <- c(15020, 15171, 12345)  # 12345 likely fails coords_df <- smn_info_extract_coordinates(stations) head(coords_df) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_get_station.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Station Metadata — smn_info_get_station","title":"Get Station Metadata — smn_info_get_station","text":"Retrieves station metadata one multiple station IDs, data frame containing station id column. function internally queries smn_int_get_station() id binds results row-wise.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_get_station.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Station Metadata — smn_info_get_station","text":"","code":"smn_info_get_station(input)"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_get_station.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Station Metadata — smn_info_get_station","text":"input Either single station id (character numeric), vector station ids, data.frame containing station id column named CLAVE station.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_get_station.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Station Metadata — smn_info_get_station","text":"base data.frame metadata rows requested stations. id resolved none matched, empty data.frame (0 rows) columns SMNdataR::stations returned.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_info_get_station.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Station Metadata — smn_info_get_station","text":"","code":"if (FALSE) { # \\dontrun{ smn_info_get_station(\"15101\") smn_info_get_station(c(\"15101\",\"15021\")) smn_info_get_station(data.frame(CLAVE = c(\"15101\",\"15021\"))) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_extract_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Station Coordinates Robustly (internal) — smn_int_extract_coordinates","title":"Extract Station Coordinates Robustly (internal) — smn_int_extract_coordinates","text":"Retrieves metadata lines given station using URL generated smn_int_get_url(), searches lines containing latitude/longitude/altitude labels (case-insensitive, ES/EN variants), extracts first numeric value line. coordinate extracted fails range validation, NA returned coordinate.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_extract_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Station Coordinates Robustly (internal) — smn_int_extract_coordinates","text":"","code":"smn_int_extract_coordinates(   station,   max_attempts = 10,   encoding = \"UTF-8\",   add_meta_cols = FALSE )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_extract_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Station Coordinates Robustly (internal) — smn_int_extract_coordinates","text":"station Station code (character numeric). max_attempts Integer. Maximum retries metadata download (default 10). encoding Character. Encoding readLines() (default \"UTF-8\"). add_meta_cols Logical. TRUE, include station source_url explicit columns returned data (default FALSE). always attached attributes provenance.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_extract_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Station Coordinates Robustly (internal) — smn_int_extract_coordinates","text":"one-row data.frame columns latitude, longitude, altitude. Attributes station source_url attached.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_extract_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Station Coordinates Robustly (internal) — smn_int_extract_coordinates","text":"","code":"NULL #> NULL"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_make_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a local square grid around a point (km-based) and clip by radius (robust CRS handling) — smn_int_make_grid","title":"Build a local square grid around a point (km-based) and clip by radius (robust CRS handling) — smn_int_make_grid","text":"Build local square grid around point (km-based) clip radius (robust CRS handling)","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_make_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a local square grid around a point (km-based) and clip by radius (robust CRS handling) — smn_int_make_grid","text":"","code":"smn_int_make_grid(   lat,   lon,   cell_km = 5,   radius_km = 20,   clip = c(\"intersect\", \"centroid\"),   crs_out = 4326,   return = c(\"polygons\", \"centroids\", \"both\") )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_int_make_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a local square grid around a point (km-based) and clip by radius (robust CRS handling) — smn_int_make_grid","text":"lat Numeric latitude center (WGS84). lon Numeric longitude center (WGS84). cell_km Numeric cell size kilometers (default 1). radius_km Numeric radius (km) square/round extent. clip Logical; clip country polygon (available). crs_out Output CRS EPSG code (default 4326). return Character: \"sf\" \"data.frame\".","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_tl_find_nearby.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","title":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","text":"Given reference point (station code coordinates), return nearby nodes SMN station catalog /prebuilt NASA-like grid (e.g. 1-km DEM grid) great-circle distances. Two selection modes supported: mode = \"radius\": nodes within radius_km mode = \"k\": k nearest nodes","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_tl_find_nearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","text":"","code":"smn_tl_find_nearby(   station = NULL,   lat = NULL,   lon = NULL,   sources = c(\"both\", \"smn\", \"nasa\"),   mode = c(\"radius\", \"k\"),   radius_km = 20,   k = 10,   bbox_pad_km = 2 )"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_tl_find_nearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","text":"station Optional. SMN station code use reference point. lat, lon Optional numeric coordinates (decimal degrees WGS84) reference point. station supplied, lat lon must provided. sources Character vector: \"smn\", \"nasa\" \"\" (default). Controls catalogs queried. mode Selection mode: \"radius\" (default) \"k\". radius_km Numeric radius kilometers (used mode=\"radius\"). Default 20. k Integer number nearest neighbors (used mode=\"k\"). Default 10. bbox_pad_km Numeric padding (km) quick prefiltering bounding box exact distances (speeds large catalogs). Default 2 km.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_tl_find_nearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","text":"data frame rows nearby nodes columns: source (factor: \"SMN\" \"NASA_POWER\"), station (character ID; grid numeric node code), latitude, longitude, altitude, distance_km (great-circle distance reference point). Rows ordered distance_km.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_tl_find_nearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","text":"function expects two datasets bundled package (preloaded): stations: SMN catalog columns station, latitude, longitude, altitude (altitude may NA) gridmex: Grid candidate nodes columns station, latitude, longitude, altitude great-circle distance computed haversine formula via geosphere. coarse degree bounding box (radius_km + bbox_pad_km)/111 applied first speed. station (reference) supplied, coordinates taken stations. found, error raised unless lat/lon provided.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/smn_tl_find_nearby.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Nearby SMN Stations and/or NASA Grid Nodes (Hybrid) — smn_tl_find_nearby","text":"","code":"if (FALSE) { # \\dontrun{ # 1) 20 km around station 15101, combining SMN + Grid smn_tl_find_nearby(station = \"15101\", mode = \"radius\", radius_km = 20)  # 2) 15 vecinos más cercanos solo del grid, a coordenadas dadas smn_tl_find_nearby(lat = 19.29, lon = -99.66, sources = \"nasa\",                    mode = \"k\", k = 15) } # }"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/stations.html","id":null,"dir":"Reference","previous_headings":"","what":"SMN station metadata (Mexico) — stations","title":"SMN station metadata (Mexico) — stations","text":"data frame station metadata compiled SMNdataR.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SMN station metadata (Mexico) — stations","text":"","code":"stations"},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SMN station metadata (Mexico) — stations","text":"data frame one row per station following variables: station Character. SMN station code. name Character. Station name. latitude Numeric. Decimal degrees (WGS84). longitude Numeric. Decimal degrees (WGS84). altitude Numeric. Elevation meters. Clicom Character. CLICOM identifier (available). Referencia Character. Reference field. SMN Character. Internal SMN id (available). cuenca Character. Basin name/identifier. cve_sta Character. Station code alternative. municipality Character. Municipality name. org_cuenca Character. Basin organization. organism Character. Operating organism. situation Character. Station situation/status. subcuenca Character. Sub-basin. type Character. Station type/class.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/reference/stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SMN station metadata (Mexico) — stations","text":"SMN compiled sources.","code":""},{"path":"https://sasoryhaf91.github.io/SMNdataR/news/index.html","id":"smndatar-010","dir":"Changelog","previous_headings":"","what":"SMNdataR 0.1.0","title":"SMNdataR 0.1.0","text":"First public release submitted JOSS. Daily downloads: SMN, NASA, hybrid mode. Nearby search tools 1-km national grid metadata.","code":""}]
